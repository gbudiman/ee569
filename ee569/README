EE569 HW1
Gloria Budiman gbudiman@usc.edu
6528-1836-50
Finalized on 9/12/2016

EE569 HW2
Gloria Budiman gbudiman@usc.edu
6528-1836-50
Finalized on 10/6/2016

EE569 HW3
Gloria Budiman gbudiman@usc.edu
6528-1836-50

########################
### Note for HW3 Grading
########################

It is highly recommended to use included ee569.xcodeproj to avoid compilation issue with OpenCV inclusion. To check individual problem, change the value of int debug in main.cpp to appropriate value. Problems in HW3 are numbered in debug value of 31 to 37 inclusive. Image output are stored in hw3_out (see Project Organization section below for more details).

Compilation requires OpenCV 3.1.0. Please adjust the include path accordingly per grader's machine configuration.

########################
### Project Organization
########################
Xcode is used as IDE
.xcodeproj file is included

images folder are typically stored in the same level as ee569 folder.
Folder structure looks like the following during development:
- root
  + ee569
    - main.cpp
    - Picture.cpp
    - Picture.hpp
    - ...
    - Makefile
    - README
    - test.sh
    - test_hw2.sh  
    - hw2_out/    
  + hw2_images (HW2)
    - tests/
  + hw3_images (HW3) <=== base input image for HW3
  + hw3_out (HW3)    <=== base output image for HW3
  + images (HW1)
    - P1/
    - P2/
    - P3/
    - tests/
  + plots # GnuPlot output from various .gs scripts
  + scripts

###############
### Compilation
###############
NOTE FOR HW3: Make compilation is not supported. Please use included .xcodeproj file.

Compiled on Mac El Capitan using g++-6 version 6.1.0
C++14 is required. C++11 will not work

As simple as
> make

It will compile all files for all problems (except BM3D)

#############
### Execution
#############
Example:
> ./main rgb2hsl "Clownfish.raw" 600 400 1 "/out/Clownfish.raw"

To trigger help message to, simply issue incomplete command
> ./main

A complete example is provided in test.sh for all problems (except BM3D)
test_hw2.sh for HW2 problems

ASSUMPTIONS: User will supply either correct type for ALL arguments OR supply NO argument. When no argument is provided, help message will be provided. However, when user passes ALL arguments, but one or more are of the wrong type or in the wrong order, there will be no exception handler (i.e. the program will simply terminate with uncaught exception)

All intermediate-step images are stored in ee569/hw2_out/ when using test_hw2.sh
They are in root hw2_out/ when project is run from Xcode (you need to set RUN_ALL in main.hpp to 0 to be able to run from Xcode)

########
### BM3D
########
BM3D code is acquired from http://www.cs.tut.fi/~foi/GCF-BM3D/ and slightly modified to fine-tune its parameters

#################
### Miscellaneous
#################
Gnuplot scripts are included to generate histogram data. They are located in scripts/ folder.
Folder plots/ includes some sample histogram output

#########################
### Source Code Structure
#########################
- main.*
  Entry point. Allow command-line execution or surgical operation targeting specific functions
- run*.cpp
  Used in tandem for surgical operation. Typically used during development and testing.
- Picture class
  Primary payload. Does heavy-lifting of I/O operation, PDF/CDF calculation, equalization, denoising, color space transformation, etc
- RgbPixel class
  Implements conversion to CMY and HSL
- CmykPixel, HslPixel class
  CMY and HSL color space
- Histogram class
  Histogram data structure. Also implements rescaling, gaussian generation
- TransferFunction class
  Implements linear transfer function
- Psnr class
  PSNR calculation
- Kernel class
  Gaussian kernel and convolution
- PatchMap class
  Used during NLM for patch comparison and pixel recalculation
- PatchCell class
  Not used
- NlmWeight class
  NLM weighting function - simple data structure
- Matrix class
  For Matrix computation with floating-point members
- BinaryMatrix class
  Simplified Matrix class that only hold true/false value
- GrainCategorizer class
  Class for methods used in categorizing grains
- Coordinate class
  Simple row-column coordinate system
- MorphMatrix class
  Filter-type I (Conditional Mark patterns) for STK operation
- MarkPatternMatrix class
  Filter-type II (Unconditional Mark patterns) for STK operation
- BitStreamMatrix class
  Optimized Matrix represented in bitstrem integer for performance optimization
- Tracer class
  Class for tracing thinned image
- BoundingBox class
  A rectangular bounding box
- SpatialData class
  A collection of properties, including center-of-mass (Coordinate), length, width, area, chromaticity-mean(RgbPixel)
- BoundaryTracer class
  Used in contour-tracing
- Mpeg7Classifier class
  Classification class for MPEG7 datasets
- LawsFilter class
  Helper class for Laws Filter implementation
- Statistics class
  Basic statistical methods to compute variance, mean, std.dev and so on
- FilterEnergy class
  Simple class for computing windowing function over Laws filter response
- FMeasure class
  Class for computing FMeasure of edge detection accuracy
- project_inclusion.hpp
  Global function declaration
